class Logger{constructor({time:t,status:s,console:e}){this._time="number"==typeof t?t:3e4,this._status=!0===s&&s,this._debugging=!0===e&&e,this._recording=!0,this._data={},this._logs={},this._keyTime=this._timeLogs.bind(this),this._start(),this.events={}}_start(){this.log("start app"),setTimeout(()=>this._setLogs(),this._time)}_setLogs(){this.log("send logs"),this._data.logs=this._logs,this._console(this._data),this._status&&(this._status=!1,this.emit("logs",Object.assign({},this._data))),this._data={},this._logs={}}_getHours(t){const s=t.getHours();return s<10?"0"+s:s}_getMinutes(t){const s=t.getMinutes();return s<10?"0"+s:s}_getSeconds(t){const s=t.getSeconds();return s<10?"0"+s:s}_getMilliseconds(t){const s=t.getUTCMilliseconds();return s<10?"00"+s:s<100?"0"+s:s}_getDate(t){const s=t.getDate();return s<10?"0"+s:s}_getMonth(t){const s=t.getMonth()+1;return s<10?"0"+s:s}_timeLogs(){const t=new Date,s=this._getHours(t),e=this._getMinutes(t),i=this._getSeconds(t),o=this._getMilliseconds(t);return`${this._getDate(t)}.${this._getMonth(t)}.${t.getFullYear()} ${s}:${e}:${i}:${o}`}activate(){this._status=!0}_console(t){this._debugging&&console.log(t)}_wtiteKey(t,s){this._console(`set [${t}] = ${s}`),s&&(this._data[t]=s)}set(t,s){if("object"!=typeof t||Array.isArray(t))this._wtiteKey(t,s);else for(let s in t)this._wtiteKey(s,t[s])}log(...t){const s=t.reduce((t,s)=>t+="string"==typeof s?s+" ":JSON.stringify(s)+" ","").slice(0,-1),e=this._keyTime();this._console(`${e}:${s}`),this._recording&&(this._logs[e]?this._logs[e]+=" "+s:this._logs[e]=s)}end(){this._setLogs()}emit(t,s){const e=this.events[t];e&&e.forEach(t=>{t.call(null,s)})}on(t,s){return this.events[t]||(this.events[t]=[]),this.events[t].push(s),()=>{this.events[t]=this.events[t].filter(t=>s!==t)}}}const jslogger=(t={})=>{const{time:s=3e4,status:e=!1,console:i=!1}=t;return new Logger({time:s,status:e,console:i})};